import React, { useState, useEffect } from "react";
import { Card, CardHeader, CardTitle, CardContent } from "../../ui/card";
import { Calculator, Flame, Zap, Beaker, Play, Pause, 
         Info, AlertTriangle } from 'lucide-react';

interface ReactionData {
  id: string;
  name: string;
  equation: string;
  description: string;
  type: 'combustion' | 'synthesis' | 'electrolysis';
  deltaH: number; // –∫–î–∂/–º–æ–ª—å
  temperature: number; // ¬∞C
  pressure: number; // –∞—Ç–º
  catalyst?: string;
  products: string[];
}

const HydrogenReactionSimulator: React.FC = () => {
  const [selectedReaction, setSelectedReaction] = useState('combustion');
  const [isAnimating, setIsAnimating] = useState(false);
  const [calculatorValues, setCalculatorValues] = useState({
    mass: 2, // –≥
    volume: 22.4, // –ª (–ø—Ä–∏ –Ω.—É.)
    moles: 1
  });

  const reactions: Record<string, ReactionData> = {
    combustion: {
      id: 'combustion',
      name: '–ì–æ—Ä–µ–Ω–∏–µ –≤–æ–¥–æ—Ä–æ–¥–∞',
      equation: '2H‚ÇÇ + O‚ÇÇ ‚Üí 2H‚ÇÇO',
      description: '–≠–∫–∑–æ—Ç–µ—Ä–º–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–∫—Ü–∏—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤–æ–¥—ã. –í—ã–¥–µ–ª—è–µ—Ç—Å—è –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–Ω–µ—Ä–≥–∏–∏.',
      type: 'combustion',
      deltaH: -286,
      temperature: 585,
      pressure: 1,
      products: ['–í–æ–¥–∞ (H‚ÇÇO)', '–≠–Ω–µ—Ä–≥–∏—è']
    },
    synthesis_ammonia: {
      id: 'synthesis_ammonia',
      name: '–°–∏–Ω—Ç–µ–∑ –∞–º–º–∏–∞–∫–∞ (–ì–∞–±–µ—Ä–∞-–ë–æ—à–∞)',
      equation: 'N‚ÇÇ + 3H‚ÇÇ ‚áå 2NH‚ÇÉ',
      description: '–û–±—Ä–∞—Ç–∏–º–∞—è —Ä–µ–∞–∫—Ü–∏—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–º–º–∏–∞–∫–∞. –û—Å–Ω–æ–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —É–¥–æ–±—Ä–µ–Ω–∏–π.',
      type: 'synthesis',
      deltaH: -92,
      temperature: 450,
      pressure: 200,
      catalyst: 'Fe, K‚ÇÇO, Al‚ÇÇO‚ÇÉ',
      products: ['–ê–º–º–∏–∞–∫ (NH‚ÇÉ)']
    },
    electrolysis: {
      id: 'electrolysis',
      name: '–≠–ª–µ–∫—Ç—Ä–æ–ª–∏–∑ –≤–æ–¥—ã',
      equation: '2H‚ÇÇO ‚Üí 2H‚ÇÇ + O‚ÇÇ',
      description: '–†–∞–∑–ª–æ–∂–µ–Ω–∏–µ –≤–æ–¥—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–º —Ç–æ–∫–æ–º. –°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è —á–∏—Å—Ç–æ–≥–æ –≤–æ–¥–æ—Ä–æ–¥–∞.',
      type: 'electrolysis',
      deltaH: 286,
      temperature: 25,
      pressure: 1,
      products: ['–í–æ–¥–æ—Ä–æ–¥ (H‚ÇÇ)', '–ö–∏—Å–ª–æ—Ä–æ–¥ (O‚ÇÇ)']
    }
  };

  const currentReaction = reactions[selectedReaction];

  // –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–æ–π –º–∞—Å—Å—ã –∏ –æ–±—ä–µ–º–∞
  const calculateValues = (changedField: string, value: number) => {
    const molarMass = 2.016; // –≥/–º–æ–ª—å H‚ÇÇ
    const molarVolume = 22.4; // –ª/–º–æ–ª—å –ø—Ä–∏ –Ω.—É.
    
    switch (changedField) {
      case 'mass':
        const molesFromMass = value / molarMass;
        setCalculatorValues({
          mass: value,
          moles: molesFromMass,
          volume: molesFromMass * molarVolume
        });
        break;
      case 'volume':
        const molesFromVolume = value / molarVolume;
        setCalculatorValues({
          volume: value,
          moles: molesFromVolume,
          mass: molesFromVolume * molarMass
        });
        break;
      case 'moles':
        setCalculatorValues({
          moles: value,
          mass: value * molarMass,
          volume: value * molarVolume
        });
        break;
    }
  };

  const getReactionColor = (type: string) => {
    switch (type) {
      case 'combustion': return 'from-red-50 to-orange-50 dark:from-red-900/20 dark:to-orange-900/20 border-red-200 dark:border-red-800';
      case 'synthesis': return 'from-green-50 to-blue-50 dark:from-green-900/20 dark:to-blue-900/20 border-green-200 dark:border-green-800';
      case 'electrolysis': return 'from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 border-blue-200 dark:border-blue-800';
      default: return 'from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 border-gray-200 dark:border-gray-700';
    }
  };

  return (
    <Card className="my-6 border border-gray-200 dark:border-gray-700 overflow-hidden">
      <CardHeader className="bg-gradient-to-r from-orange-50 to-red-50 dark:from-orange-900/20 dark:to-red-900/20 p-6">
        <CardTitle className="text-xl font-bold text-orange-900 dark:text-orange-100 flex items-center gap-3">
          <Beaker className="text-orange-600 dark:text-orange-400" size={24} />
          –°–∏–º—É–ª—è—Ç–æ—Ä —Ä–µ–∞–∫—Ü–∏–π –∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–æ–¥–æ—Ä–æ–¥–∞
        </CardTitle>
        
        {/* –í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–∏ */}
        <div className="flex flex-wrap gap-2 mt-4">
          {Object.values(reactions).map((reaction) => (
            <button
              key={reaction.id}
              onClick={() => setSelectedReaction(reaction.id)}
              className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${
                selectedReaction === reaction.id
                  ? 'bg-orange-500 text-white shadow-md'
                  : 'bg-white dark:bg-gray-800 text-orange-600 dark:text-orange-400 hover:bg-orange-50 dark:hover:bg-orange-900/30 border border-orange-200 dark:border-orange-800'
              }`}
            >
              {reaction.name}
            </button>
          ))}
        </div>
      </CardHeader>

      <CardContent className="p-6">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* –°–∏–º—É–ª—è—Ç–æ—Ä —Ä–µ–∞–∫—Ü–∏–π */}
          <div className="reaction-simulator">
            <div className={`bg-gradient-to-br ${getReactionColor(currentReaction.type)} border p-6 rounded-xl`}>
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-xl font-bold text-gray-900 dark:text-white flex items-center gap-2">
                  {currentReaction.type === 'combustion' && <Flame className="text-red-500" size={20} />}
                  {currentReaction.type === 'electrolysis' && <Zap className="text-blue-500" size={20} />}
                  {currentReaction.type === 'synthesis' && <Beaker className="text-green-500" size={20} />}
                  {currentReaction.name}
                </h3>
                <button
                  onClick={() => setIsAnimating(!isAnimating)}
                  className="p-2 bg-white/70 dark:bg-gray-800/70 rounded-lg hover:bg-white dark:hover:bg-gray-800 transition-all"
                >
                  {isAnimating ? <Pause size={16} /> : <Play size={16} />}
                </button>
              </div>

              {/* –£—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ */}
              <div className={`text-center p-4 bg-white dark:bg-gray-800 rounded-lg mb-4 ${isAnimating ? 'animate-pulse' : ''}`}>
                <div className="text-2xl font-mono font-bold text-gray-900 dark:text-white">
                  {currentReaction.equation}
                </div>
              </div>

              {/* –£—Å–ª–æ–≤–∏—è —Ä–µ–∞–∫—Ü–∏–∏ */}
              <div className="grid grid-cols-2 gap-4 mb-4">
                <div className="condition-card bg-white dark:bg-gray-800 p-3 rounded-lg">
                  <div className="text-sm text-gray-600 dark:text-gray-400">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</div>
                  <div className="text-lg font-bold text-gray-900 dark:text-white">{currentReaction.temperature}¬∞C</div>
                </div>
                <div className="condition-card bg-white dark:bg-gray-800 p-3 rounded-lg">
                  <div className="text-sm text-gray-600 dark:text-gray-400">–î–∞–≤–ª–µ–Ω–∏–µ</div>
                  <div className="text-lg font-bold text-gray-900 dark:text-white">{currentReaction.pressure} –∞—Ç–º</div>
                </div>
              </div>

              {/* –ö–∞—Ç–∞–ª–∏–∑–∞—Ç–æ—Ä */}
              {currentReaction.catalyst && (
                <div className="catalyst-info bg-yellow-50 dark:bg-yellow-900/20 p-3 rounded-lg mb-4 border border-yellow-200 dark:border-yellow-800">
                  <div className="flex items-center gap-2 mb-1">
                    <span className="text-yellow-600 dark:text-yellow-400 text-sm font-medium">–ö–∞—Ç–∞–ª–∏–∑–∞—Ç–æ—Ä:</span>
                  </div>
                  <div className="text-yellow-800 dark:text-yellow-200 font-semibold">{currentReaction.catalyst}</div>
                </div>
              )}

              {/* –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç */}
              <div className={`energy-effect p-3 rounded-lg mb-4 ${
                currentReaction.deltaH < 0 
                  ? 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800'
                  : 'bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800'
              }`}>
                <div className="flex items-center gap-2 mb-1">
                  <span className={`text-sm font-medium ${
                    currentReaction.deltaH < 0 ? 'text-red-600 dark:text-red-400' : 'text-blue-600 dark:text-blue-400'
                  }`}>
                    {currentReaction.deltaH < 0 ? 'üî• –≠–∫–∑–æ—Ç–µ—Ä–º–∏—á–µ—Å–∫–∞—è' : '‚ùÑÔ∏è –≠–Ω–¥–æ—Ç–µ—Ä–º–∏—á–µ—Å–∫–∞—è'}
                  </span>
                </div>
                <div className={`font-bold ${
                  currentReaction.deltaH < 0 ? 'text-red-800 dark:text-red-200' : 'text-blue-800 dark:text-blue-200'
                }`}>
                  ŒîH = {currentReaction.deltaH} –∫–î–∂/–º–æ–ª—å
                </div>
              </div>

              {/* –ü—Ä–æ–¥—É–∫—Ç—ã */}
              <div className="products bg-green-50 dark:bg-green-900/20 p-3 rounded-lg border border-green-200 dark:border-green-800">
                <div className="text-sm font-medium text-green-600 dark:text-green-400 mb-2">–ü—Ä–æ–¥—É–∫—Ç—ã —Ä–µ–∞–∫—Ü–∏–∏:</div>
                <div className="flex flex-wrap gap-2">
                  {currentReaction.products.map((product, index) => (
                    <span key={index} className="bg-green-200 dark:bg-green-800 text-green-800 dark:text-green-200 px-2 py-1 rounded text-sm font-medium">
                      {product}
                    </span>
                  ))}
                </div>
              </div>
            </div>

            {/* –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ */}
            <div className="mt-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700">
              <div className="flex items-start gap-2">
                <Info className="text-blue-500 mt-1 flex-shrink-0" size={16} />
                <p className="text-sm text-gray-700 dark:text-gray-300 leading-relaxed">
                  {currentReaction.description}
                </p>
              </div>
            </div>
          </div>

          {/* –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä */}
          <div className="calculator-section">
            <div className="bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 p-6 rounded-xl border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-bold text-blue-900 dark:text-blue-100 mb-4 flex items-center gap-2">
                <Calculator className="text-blue-600 dark:text-blue-400" size={20} />
                –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–æ–¥–æ—Ä–æ–¥–∞ (H‚ÇÇ)
              </h3>

              <div className="space-y-4">
                {/* –ú–∞—Å—Å–∞ */}
                <div className="calculator-field">
                  <label className="block text-sm font-medium text-blue-700 dark:text-blue-300 mb-2">
                    –ú–∞—Å—Å–∞ (–≥):
                  </label>
                  <input
                    type="number"
                    value={calculatorValues.mass.toFixed(3)}
                    onChange={(e) => calculateValues('mass', parseFloat(e.target.value) || 0)}
                    className="w-full p-3 border border-blue-200 dark:border-blue-700 rounded-lg bg-white dark:bg-gray-800 text-blue-900 dark:text-blue-100 font-mono text-lg"
                    step="0.001"
                  />
                </div>

                {/* –û–±—ä–µ–º */}
                <div className="calculator-field">
                  <label className="block text-sm font-medium text-blue-700 dark:text-blue-300 mb-2">
                    –û–±—ä–µ–º –ø—Ä–∏ –Ω.—É. (–ª):
                  </label>
                  <input
                    type="number"
                    value={calculatorValues.volume.toFixed(3)}
                    onChange={(e) => calculateValues('volume', parseFloat(e.target.value) || 0)}
                    className="w-full p-3 border border-blue-200 dark:border-blue-700 rounded-lg bg-white dark:bg-gray-800 text-blue-900 dark:text-blue-100 font-mono text-lg"
                    step="0.001"
                  />
                </div>

                {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—â–µ—Å—Ç–≤–∞ */}
                <div className="calculator-field">
                  <label className="block text-sm font-medium text-blue-700 dark:text-blue-300 mb-2">
                    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—â–µ—Å—Ç–≤–∞ (–º–æ–ª—å):
                  </label>
                  <input
                    type="number"
                    value={calculatorValues.moles.toFixed(3)}
                    onChange={(e) => calculateValues('moles', parseFloat(e.target.value) || 0)}
                    className="w-full p-3 border border-blue-200 dark:border-blue-700 rounded-lg bg-white dark:bg-gray-800 text-blue-900 dark:text-blue-100 font-mono text-lg"
                    step="0.001"
                  />
                </div>
              </div>

              {/* –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã */}
              <div className="mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg border border-blue-100 dark:border-blue-700">
                <h4 className="font-semibold text-blue-800 dark:text-blue-200 mb-3">–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã H‚ÇÇ:</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-blue-600 dark:text-blue-400">–ú–æ–ª—è—Ä–Ω–∞—è –º–∞—Å—Å–∞:</span>
                    <span className="font-mono text-blue-800 dark:text-blue-200">2.016 –≥/–º–æ–ª—å</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-blue-600 dark:text-blue-400">–ú–æ–ª—è—Ä–Ω—ã–π –æ–±—ä–µ–º (–Ω.—É.):</span>
                    <span className="font-mono text-blue-800 dark:text-blue-200">22.4 –ª/–º–æ–ª—å</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-blue-600 dark:text-blue-400">–ü–ª–æ—Ç–Ω–æ—Å—Ç—å (–Ω.—É.):</span>
                    <span className="font-mono text-blue-800 dark:text-blue-200">0.090 –≥/–ª</span>
                  </div>
                </div>
              </div>

              {/* –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã */}
              <div className="mt-6 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                <h4 className="font-semibold text-green-800 dark:text-green-200 mb-3">–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã:</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-green-600 dark:text-green-400">–≠–Ω–µ—Ä–≥–∏—è —Å–≥–æ—Ä–∞–Ω–∏—è:</span>
                    <span className="font-mono text-green-800 dark:text-green-200">
                      {(calculatorValues.moles * 286).toFixed(1)} –∫–î–∂
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-green-600 dark:text-green-400">–≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –≤ –∫–í—Ç¬∑—á:</span>
                    <span className="font-mono text-green-800 dark:text-green-200">
                      {(calculatorValues.moles * 286 / 3.6).toFixed(2)} –∫–í—Ç¬∑—á
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-green-600 dark:text-green-400">–ú–∞—Å—Å–∞ –≤–æ–¥—ã (–ø—Ä–æ–¥—É–∫—Ç):</span>
                    <span className="font-mono text-green-800 dark:text-green-200">
                      {(calculatorValues.moles * 18.015).toFixed(2)} –≥
                    </span>
                  </div>
                </div>
              </div>
            </div>

            {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
            <div className="mt-4 p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg border border-yellow-200 dark:border-yellow-800">
              <div className="flex items-start gap-2">
                <AlertTriangle className="text-yellow-600 dark:text-yellow-400 mt-1 flex-shrink-0" size={16} />
                <div>
                  <h4 className="font-semibold text-yellow-800 dark:text-yellow-200 mb-2">‚ö†Ô∏è –ú–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</h4>
                  <ul className="text-sm text-yellow-700 dark:text-yellow-300 space-y-1">
                    <li>‚Ä¢ –í–æ–¥–æ—Ä–æ–¥ –∫—Ä–∞–π–Ω–µ –≥–æ—Ä—é—á (–ø—Ä–µ–¥–µ–ª—ã –≤–æ—Å–ø–ª–∞–º–µ–Ω–µ–Ω–∏—è 4-75%)</li>
                    <li>‚Ä¢ –û–±—Ä–∞–∑—É–µ—Ç –≤–∑—Ä—ã–≤–æ–æ–ø–∞—Å–Ω—ã–µ —Å–º–µ—Å–∏ —Å –≤–æ–∑–¥—É—Ö–æ–º</li>
                    <li>‚Ä¢ –ù–µ–≤–∏–¥–∏–º–æ–µ –ø–ª–∞–º—è - –æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ–∂–æ–≥–æ–≤</li>
                    <li>‚Ä¢ –ù–∏–∑–∫–∞—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å - –±—ã—Å—Ç—Ä–æ —É–ª–µ—Ç—É—á–∏–≤–∞–µ—Ç—Å—è</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default HydrogenReactionSimulator; 